// <auto-generated />
using System;
using AppDevGroupCoursework.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppDevGroupCoursework.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220501103533_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppDevGroupCoursework.Models.Actor", b =>
                {
                    b.Property<int>("actorNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("actorNumber"), 1L, 1);

                    b.Property<string>("actorFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("actorSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("actorNumber");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.CastMember", b =>
                {
                    b.Property<int>("castMemberNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("castMemberNumber"), 1L, 1);

                    b.Property<int>("ActorNumber")
                        .HasColumnType("int");

                    b.Property<int>("DVDNumber")
                        .HasColumnType("int");

                    b.HasKey("castMemberNumber");

                    b.HasIndex("ActorNumber");

                    b.HasIndex("DVDNumber");

                    b.ToTable("CastMember");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.DVDCategory", b =>
                {
                    b.Property<int>("categoryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryNumber"), 1L, 1);

                    b.Property<bool>("ageRestriction")
                        .HasColumnType("bit");

                    b.Property<string>("categoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryNumber");

                    b.ToTable("DVDCategory");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.DVDCopy", b =>
                {
                    b.Property<int>("copyNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("copyNumber"), 1L, 1);

                    b.Property<int>("DVDNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("datePurchased")
                        .HasColumnType("datetime2");

                    b.HasKey("copyNumber");

                    b.HasIndex("DVDNumber");

                    b.ToTable("DVDCopy");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.DVDTitle", b =>
                {
                    b.Property<int>("dVDNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dVDNumber"), 1L, 1);

                    b.Property<int>("CategoryNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProducerNumber")
                        .HasColumnType("int");

                    b.Property<int>("StudioNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateReleased")
                        .HasColumnType("datetime2");

                    b.Property<double>("penaltyCharge")
                        .HasColumnType("float");

                    b.Property<double>("standardCharge")
                        .HasColumnType("float");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("dVDNumber");

                    b.HasIndex("CategoryNumber");

                    b.HasIndex("ProducerNumber");

                    b.HasIndex("StudioNumber");

                    b.ToTable("DVDTitle");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.Loan", b =>
                {
                    b.Property<int>("loanNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("loanNumber"), 1L, 1);

                    b.Property<int>("CopyNumber")
                        .HasColumnType("int");

                    b.Property<int>("LoanTypeNumber")
                        .HasColumnType("int");

                    b.Property<int>("MemberNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateDue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateReturned")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("loanNumber");

                    b.HasIndex("CopyNumber");

                    b.HasIndex("LoanTypeNumber");

                    b.HasIndex("MemberNumber");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.LoanType", b =>
                {
                    b.Property<int>("loanTypeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("loanTypeNumber"), 1L, 1);

                    b.Property<string>("loanDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loan_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("loanTypeNumber");

                    b.ToTable("LoanType");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.Member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("MembershipCategoryNumber")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("MembershipCategoryNumber");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.MembershipCategory", b =>
                {
                    b.Property<int>("membershipCategoryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("membershipCategoryNumber"), 1L, 1);

                    b.Property<string>("membershipCategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("membershipCategoryTotalLoans")
                        .HasColumnType("int");

                    b.HasKey("membershipCategoryNumber");

                    b.ToTable("MembershipCategory");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.Producer", b =>
                {
                    b.Property<int>("producerNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("producerNumber"), 1L, 1);

                    b.Property<string>("producerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("producerNumber");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.Studio", b =>
                {
                    b.Property<int>("studioNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studioNumber"), 1L, 1);

                    b.Property<string>("studioName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("studioNumber");

                    b.ToTable("Studio");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.User", b =>
                {
                    b.Property<int>("usernumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usernumber"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usernumber");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.CastMember", b =>
                {
                    b.HasOne("AppDevGroupCoursework.Models.Actor", "actor")
                        .WithMany()
                        .HasForeignKey("ActorNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDevGroupCoursework.Models.DVDTitle", "dvdTitle")
                        .WithMany()
                        .HasForeignKey("DVDNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("actor");

                    b.Navigation("dvdTitle");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.DVDCopy", b =>
                {
                    b.HasOne("AppDevGroupCoursework.Models.DVDTitle", "dVDTitle")
                        .WithMany()
                        .HasForeignKey("DVDNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dVDTitle");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.DVDTitle", b =>
                {
                    b.HasOne("AppDevGroupCoursework.Models.DVDCategory", "dVDCategory")
                        .WithMany()
                        .HasForeignKey("CategoryNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDevGroupCoursework.Models.Producer", "producer")
                        .WithMany()
                        .HasForeignKey("ProducerNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDevGroupCoursework.Models.Studio", "studio")
                        .WithMany()
                        .HasForeignKey("StudioNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dVDCategory");

                    b.Navigation("producer");

                    b.Navigation("studio");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.Loan", b =>
                {
                    b.HasOne("AppDevGroupCoursework.Models.DVDCopy", "dVDCopy")
                        .WithMany()
                        .HasForeignKey("CopyNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDevGroupCoursework.Models.LoanType", "loanType")
                        .WithMany()
                        .HasForeignKey("LoanTypeNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppDevGroupCoursework.Models.Member", "member")
                        .WithMany()
                        .HasForeignKey("MemberNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dVDCopy");

                    b.Navigation("loanType");

                    b.Navigation("member");
                });

            modelBuilder.Entity("AppDevGroupCoursework.Models.Member", b =>
                {
                    b.HasOne("AppDevGroupCoursework.Models.MembershipCategory", "membershipCategory")
                        .WithMany()
                        .HasForeignKey("MembershipCategoryNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("membershipCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
